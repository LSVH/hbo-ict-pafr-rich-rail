name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Setup DB service
      run: |
        psql -h "$DB_HOST" -d "$DB_NAME" -U "$DB_USER" -a -f "$SQL_FILE"
      env:
        SQL_FILE: 'dump.sql'
        DB_HOST: 'localhost'
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        PGPASSWORD: ${{ secrets.DB_PASS }}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build, Test and Deploy with Maven
      run: mvn --batch-mode deploy
      env:
        DB_URL: jdbc:postgresql://localhost:5432
        DB_DRIVER: org.postgresql.Driver
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

